@page "/tickets/{id:int}"
@page "/tickets/add"

@if (Ticket != null)
{   
    <EditForm 
        Model=@Ticket
        OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label 
                class="form-label">
                Title
            </label>
            <InputText 
                class="form-control"
                @bind-Value="Ticket.Title" />
        </div>
        <div class="mb-3">
            <label 
                class="form-label">
                Description
            </label>
            <InputText 
                class="form-control"
                @bind-Value="Ticket.Description" />
        </div>
        <div class="mb-3">
            <label
                class="form-label">
                Project Id
            </label>
            <InputNumber
                class="form-control"
                @bind-Value=Ticket.ProjectId />
        </div>
        <div class="mb-3">
            <label 
                class="form-label">
                Owner
            </label>
            <InputText 
                class="form-control"
                @bind-Value="Ticket.Owner"
                 />
        </div>
        <div class="mb-3">
            <label 
                class="form-label">
                Due Date
            </label>
            <InputDate
                class="form-control"
                @bind-Value="Ticket.DueDate" />
        </div>
        <div class="mb-3">
            <label 
                class="form-label">
                Entered Date
            </label>
            <InputDate
                class="form-control"
                @bind-Value="Ticket.EnteredDate" />
        </div>
        <ValidationSummary />
        <button
            type="submit"
            class="btn btn-primary" >
            Submit
        </button>
    </EditForm>
}

@code
{
    [Parameter]
    public int? Id { get; set; }

    public Ticket Ticket { get; set; } = new();

    [Inject]
    public ITicketsScreenUseCases TicketsScreenUseCases { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            Ticket = await TicketsScreenUseCases.ViewTicket(Id.Value);
        }
    }

    private async Task Submit()
    {
        if (Id == null)
        {
            await TicketsScreenUseCases.AddTicket(Ticket);
        }
        else
        {
            await TicketsScreenUseCases.EditTicket(Id.Value, Ticket);
        }
    }
}